{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"select(BeachTan, -Gender)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"select.data.frame(BeachTan, -Gender)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tidyselect::vars_select(tbl_vars(.data), !!!enquos(...))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval_select_impl(NULL, .vars, expr(c(!!!dots)), include = .include, \n    exclude = .exclude, strict = .strict, name_spec = unique_name_spec, \n    uniquely_named = TRUE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"with_subscript_errors(vars_select_eval(vars, expr, strict, data = x, \n    name_spec = name_spec, uniquely_named = uniquely_named, type = type), \n    type = type)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch(instrument_base_errors(expr), vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"instrument_base_errors(expr)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withCallingHandlers(expr, simpleError = function(cnd) {\n    abort(conditionMessage(cnd), parent = cnd)\n})","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vars_select_eval(vars, expr, strict, data = x, name_spec = name_spec, \n    uniquely_named = uniquely_named, type = type)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"vctrs::vec_as_names(names(pos), repair = \"check_unique\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"validate_unique(names = names)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop_names_must_be_unique(which(duplicated(names)))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop_names(\"Names must be unique.\", class = \"vctrs_error_names_must_be_unique\", \n    locations = locations)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop_vctrs(message, class = c(class, \"vctrs_error_names\"), locations = locations, \n    ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"abort(message, class = c(class, \"vctrs_error\"), ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"signal_abort(cnd)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(fallback)","line_number":0}],"message":"Error: Names must be unique.\n"}